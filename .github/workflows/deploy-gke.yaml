name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: xero-grad-days
  PROJECT_NUMBER: 429718492645

  CLUSTER: clouddemo-linux
  CLUSTER_ZONE: us-central1-a

  REPOSITORY: clouddemo
  REPOSITORY_REGION: us-central1

  IMAGE: xero-grad-days

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      #
      # Authenticate to Google Cloud using workload identity federation
      #
      - id: 'auth'
        name: 'Obtain access token by using workload identity federation'
        uses: 'google-github-actions/auth@v0'
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc
          service_account: github-actions-workflow@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Connect to Artifact Registry
        run: |-
          echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://${{ env.REPOSITORY_REGION }}-docker.pkg.dev

      - name: Connect to GKE
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.CLUSTER }}
          location: ${{ env.CLUSTER_ZONE }}
      
      #
      # Build the .NET code
      #
      - name: Build solution
        run: |-
          dotnet publish Xero-Grad-Days.csproj \
            --configuration Release \
            --output /app/publish
      
      #
      # Build the Docker image and push it to Artifact Registry
      #
      - name: Create image tag
        run: echo "IMAGE_TAG=${{ env.REPOSITORY_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Lock image version in deployment.yaml
        run: sed -i 's|xero-grad-days|${{ env.IMAGE_TAG }}|g' kubernetes.yaml

      - name: Build Docker image
        run: docker build --tag "${{ env.IMAGE_TAG }}" 

      - name: Publish Docker image to Google Artifact Registry
        run: docker push "${{ env.IMAGE_TAG }}"
      
      #
      # Deploy to GKE
      #
      - name: Deploy to GKE
        run: kubectl apply -f deployment.yaml
    